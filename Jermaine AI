------------------HTML--------------------------------------------
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="styling.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  </head>
  <body>
    <section class="home">
      <div class="home-text">
        <h1> Performing with Excellence <br> <span>To do More for More</span></h1>
        <p>We are excellence with the pc parts compatibility to do more for you! <br>With the ever-changing tech, you'll always get the latest and most accurate compatibility.</p>
        <a href="#" class="home-btn">Create Now</a>
        <a href="#" class="home-btn2">Buy Pre-Build</a>
      </div>
    </section>

<!-- Filter Section -->
<div class="filter-section">
  <h4>Search by Budget and PC Parts</h4>
  <form id="filter-form">
      <!-- Budget Input -->
      <div class="form-group">
          <label for="budget">Your Budget</label>
          <input type="number" class="form-control" id="budget" placeholder="Enter your budget" required />
      </div>

      <!-- Part Selection Section -->
      <div class="form-group">
          <label for="part-type">Select PC Parts</label>
          <div id="part-container">
              <!-- Dynamically add part fields here -->
          </div>
          <button type="button" id="add-part" class="btn btn-secondary">Add Another Part</button>
      </div>

      <!-- Search Button -->
      <button type="submit" class="btn btn-primary">Search</button>
  </form>
</div>
        </div>
      </div>
    </section>
    <script src="BuildScript.js"></script>
  </body>
</html>
--------------------------------------------------JAVASCRIPT-------------------------------------------------------------------------------------------------
$(document).ready(function () {
    const pcParts = {
        cpu: [
            { name: "Intel Core i9", price: 500 },
            { name: "Intel Core i7", price: 350 },
            { name: "Intel Core i5", price: 250 },
            { name: "AMD Ryzen 9", price: 500 },
            { name: "AMD Ryzen 7", price: 300 },
            { name: "AMD Ryzen 5", price: 200 },
        ],
        gpu: [
            { name: "RTX 40 Series", price: 700 },
            { name: "RTX 30 Series", price: 500 },
            { name: "GTX 10 Series", price: 350 },
            { name: "GTX 16 Series", price: 200 },
            { name: "AMD RX9000 Series", price: 750 },
            { name: "AMD RX8000 Series", price: 600 },
            { name: "AMD RX7000 Series", price: 500 },
            { name: "AMD RX6000 Series", price: 350 },
        ],
        ram: [
            { name: "16GB DDR4", price: 30 },
            { name: "32GB DDR4", price: 80 },
            { name: "64GB DDR4", price: 150 },
            { name: "16GB DDR5", price: 120 },
            { name: "32GB DDR5", price: 170 },
            { name: "64GB DDR5", price: 220 },
            { name: "128GB DDR5", price: 300 },
        ],
        cooler: [
            { name: "Cooler Master", price: 90 },
            { name: "NZXT Kraken", price: 220 },
            { name: "Corsair iCUE", price: 170 },
        ],
        motherboard: [
            { name: "MSI B500", price: 140 },
            { name: "ASUS ROG", price: 250 },
            { name: "Gigabyte D3SH", price: 160 },
            { name: "Gigabyte Aorus Elite", price: 280 },
            { name: "MSI MAG", price: 300 },
        ],
        storage: [
            { name: "500GB SSD", price: 50 },
            { name: "1TB SSD", price: 100 },
            { name: "2TB SSD", price: 160 },
            { name: "500GB HDD", price: 25 },
            { name: "1TB HDD", price: 50 },
            { name: "2TB SSD", price: 100 },
        ],
        case: [
            { name: "NZXT H510", price: 100 },
            { name: "Corsair iCUE 4000X", price: 160 },
            { name: "GAMEPOWER Warcry", price: 140 },
            { name: "Phanteks P400A", price: 120 },
            { name: "Asus TUF GT301", price: 110 },
        ],
        powerSupply: [
            { name: "650W", price: 70 },
            { name: "750W", price: 100 },
            { name: "1000W", price: 160 },
        ],
    };

    let selectedFilters = {
        budget: null,
        parts: [],
    };

    // Handle adding new part selection
    $("#add-part").on("click", function () {
        const partSelectHTML = `
            <div class="form-group part-container">
                <label for="part-type">Choose Part Type</label>
                <select class="form-control part-type" required>
                    <option value="">Select Part</option>
                    <option value="cpu">CPU</option>
                    <option value="gpu">GPU</option>
                    <option value="ram">RAM</option>
                    <option value="cooler">Cooler</option>
                    <option value="motherboard">Motherboard</option>
                    <option value="storage">Storage</option>
                    <option value="case">Case</option>
                    <option value="powerSupply">Power Supply</option>
                </select>
                <label for="part-value">Choose Specific Item</label>
                <select class="form-control part-value" disabled required>
                    <option value="">Select Part First</option>
                </select>
                <button type="button" class="btn btn-danger remove-part">Remove Part</button>
            </div>
        `;
        $("#part-container").append(partSelectHTML);
    });

    // Handles types for each part
    $(document).on("change", ".part-type", function () {
        const partType = $(this).val();
        const partValueSelect = $(this).closest(".part-container").find(".part-value");
        partValueSelect.empty();

        if (partType && pcParts[partType]) {
            partValueSelect.removeAttr("disabled");
            pcParts[partType].forEach((item) => {
                const optionText = `${item.name} - $${item.price}`;
                partValueSelect.append(new Option(optionText, JSON.stringify(item)));
            });
        } else {
            partValueSelect.attr("disabled", true);
            partValueSelect.append(new Option("Select Part First", ""));
        }
    });

    // Remove part on click
    $(document).on("click", ".remove-part", function () {
        $(this).closest(".part-container").remove();
    });

    // Function to handle search submission
    $("#filter-form").on("submit", function (e) {
        e.preventDefault();

        const budget = $("#budget").val();
        const parts = [];

        // Make sure budget is a number
        if (!budget || isNaN(budget) || budget <= 0) {
            alert("Please enter a valid budget");
            return;
        }

        // Collect selected parts
        $(".part-container").each(function () {
            const partType = $(this).find(".part-type").val();
            const partValue = $(this).find(".part-value").val();

            if (partType && partValue) {
                parts.push(JSON.parse(partValue));
            }
        });

        selectedFilters = { budget, parts };

        // Call AI response for feedback based on filters
        AIResponse(selectedFilters);

        // Show parts and recommendations
        showPCParts(selectedFilters);
    });

    // AI Response function
    async function AIResponse(filters) {
        const apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyB0LQnI2MGX8ASm4_ZO-1Y6Wf_gTzrF408';
        
        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    contents: [
                        {
                            parts: [
                                { text: `Budget: $${filters.budget}` },
                                { text: `Parts Selected: ${filters.parts.map(part => part.name).join(', ')}` },
                            ]
                        }
                    ]
                })
            });

            const data = await response.json();

            if (data.candidates && data.candidates[0] && data.candidates[0].content) {
                const feedback = data.candidates[0].content.parts[0].text.trim();
                $('#pc-cards').append(`<p><strong>AI Feedback:</strong> ${feedback}</p>`);
            } else {
                $('#pc-cards').append(`<p><strong>AI Feedback:</strong> Unable to generate feedback. Please try again later.</p>`);
            }

        } catch (error) {
            console.error("Error fetching AI response:", error);
            $('#pc-cards').append(`<p><strong>AI Feedback:</strong> There was an error retrieving the AI response. Please try again later.</p>`);
        }
    }

    // Display the selected parts
    function showPCParts(filters) {
        let partsListHTML = `<p>Filtered by Budget: $${filters.budget}</p><p>Selected Parts:</p><ul>`;
        filters.parts.forEach((part) => {
            const storeLinks = generateStoreLinks(part);
            partsListHTML += `
                <li>
                    ${part.name} - $${part.price}<br>
                    <a href="${storeLinks.bestBuy}" target="_blank">Best Buy</a> |
                    <a href="${storeLinks.amazon}" target="_blank">Amazon</a> |
                    <a href="${storeLinks.newegg}" target="_blank">Newegg</a>
                </li>
            `;
        });
        partsListHTML += `</ul>`;
        $("#pc-cards").html(partsListHTML);
    }

    //generates the complete links
    function generateStoreLinks(part) {
        return {
            bestBuy: `https://www.bestbuy.com/site/searchpage.jsp?st=${encodeURIComponent(part.name)}`,
            amazon: `https://www.amazon.com/s?k=${encodeURIComponent(part.name)}`,
            newegg: `https://www.newegg.com/p/ps?query=${encodeURIComponent(part.name)}`
        };
    }
});
